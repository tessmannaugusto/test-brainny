[{"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\index.js":"1","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\App.jsx":"2","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\LoginForm.jsx":"3","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Button.jsx":"4","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Input.jsx":"5","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\loginPage.jsx":"6","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Main.jsx":"7","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\dashboard.jsx":"8","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Menu.jsx":"9","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Content.jsx":"10","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\RegistersTable.jsx":"11","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\myRegisters.jsx":"12"},{"size":187,"mtime":1611143404122,"results":"13","hashOfConfig":"14"},{"size":333,"mtime":1611150207191,"results":"15","hashOfConfig":"14"},{"size":1797,"mtime":1611190960168,"results":"16","hashOfConfig":"14"},{"size":182,"mtime":1611232633953,"results":"17","hashOfConfig":"14"},{"size":221,"mtime":1611190970156,"results":"18","hashOfConfig":"14"},{"size":1331,"mtime":1611163838195,"results":"19","hashOfConfig":"14"},{"size":853,"mtime":1611232449503,"results":"20","hashOfConfig":"14"},{"size":365,"mtime":1611232207888,"results":"21","hashOfConfig":"14"},{"size":1218,"mtime":1611185693652,"results":"22","hashOfConfig":"14"},{"size":299,"mtime":1611232272876,"results":"23","hashOfConfig":"14"},{"size":2056,"mtime":1611232289625,"results":"24","hashOfConfig":"14"},{"size":734,"mtime":1611232468301,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dz0i48",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\index.js",[],["52","53"],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\App.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\LoginForm.jsx",["54","55","56"],"import React, {useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nimport {Button} from './Button';\r\nimport {Input} from './Input';\r\n\r\nimport '../assets/css/LoginForm.css'\r\n\r\n\r\nexport default function LoginForm() {\r\n  const { register, handleSubmit} = useForm();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState({status: false, message: \"Invalid username or password\"});\r\n\r\n\r\n  const  onSubmit = data => {\r\n\r\n    console.log(data);\r\n    setUsername(data.username);\r\n    setPassword(data.password);\r\n\r\n\r\n    try {\r\n    //API CALL AQUI\r\n      if (username === \"augusto\" && password === \"123456789\") {\r\n        setSuccess(true);\r\n        console.log(\"Certo!\")\r\n      } else {\r\n        setError({status: true});\r\n        console.log(\"errado\")\r\n      }\r\n    } catch (e) {\r\n      setError({status: true, message: e});\r\n    } finally {\r\n      setIsloading(false);\r\n    }\r\n  };\r\n\r\n  return(\r\n    \r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n        <div className=\"input-container\">\r\n        <label htmlFor=\"login\" >Login</label>\r\n        <Input type=\"text\" id=\"login\" name=\"username\" className=\"input\" inputRef={register({required: true})}></Input>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <Input type=\"password\" id=\"password\" name=\"password\" className=\"input\" inputRef={register({required: true})}></Input>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <Button type=\"submit\" name=\"Login\"className=\"button\"></Button>\r\n        </div>\r\n      </form>\r\n    \r\n  )\r\n}","C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Button.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Input.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\loginPage.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Main.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\dashboard.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Menu.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\Content.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\components\\RegistersTable.jsx",[],"C:\\Users\\55199\\Desktop\\projects\\test-brainny\\src\\views\\myRegisters.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":16,"column":10,"nodeType":"63","messageId":"64","endLine":16,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":17,"column":10,"nodeType":"63","messageId":"64","endLine":17,"endColumn":15},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'success' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]